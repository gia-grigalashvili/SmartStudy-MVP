model Language {
  id String @id @default(uuid(7)) @db.Uuid

  code  String @unique
  name  String
  order Int    @default(autoincrement())

  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  AdminTranslation   AdminTranslation[]
  TeacherTranslation TeacherTranslation[]
  StudentTranslation StudentTranslation[]

  @@map("languages")
}

model File {
  id String @id @default(uuid()) @db.Uuid

  name  String
  path  String
  size  Int
  order Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("files")
}

model RefreshToken {
  id String @id @default(uuid(7)) @db.Uuid

  admin   Admin?  @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId String? @db.Uuid

  teacher   Teacher? @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId String?  @db.Uuid

  student   Student? @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId String?  @db.Uuid

  token     String   @unique
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("refresh_tokens")
}
