model Chat {
  id          String    @id @default(uuid(7)) @db.Uuid
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @unique @db.Uuid
  unreadCount Int       @default(0)
  lastMessage String?
  lastAt      DateTime?

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("chats")
}

model Message {
  id     String @id @default(uuid(7)) @db.Uuid
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId String @db.Uuid

  sender MessageSender

  body String?
  file File?

  status MessageStatus @default(SENT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chatId, createdAt])
  @@map("messages")
}
